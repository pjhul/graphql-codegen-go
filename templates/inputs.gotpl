{{range .Types}}
  {{if eq .Kind "INPUT_OBJECT"}}
    type {{formatName .Name}} struct {
        {{range .Fields}}{{formatName .Name}} {{formatType .Type}} `json:"{{.Name}},omitempty"`{{"\n"}}{{end}}
    }
  {{else if eq .Kind "ENUM"}}{{with $x := .}}
    type {{formatName $x.Name}} string
    const (
      {{range $x.EnumValues}}{{formatName $x.Name}}{{formatName .Name}} {{formatName $x.Name}} = "{{.Name}}"{{"\n"}}{{end}}
    )

    func Make{{formatName $x.Name}}(v {{formatName $x.Name}}) *{{formatName $x.Name}} {
      return (*{{formatName $x.Name}})(&v)
    }
  {{end}}
  {{else if eq .Kind "SCALAR"}}
    type {{.Name}} {{formatScalar .Name}}
  {{end}}
{{end}}

func MakeInt64(v int64) *int64 {
  return &v
}

func MakeFloat64(v float64) *float64 {
  return &v
}

func MakeString(v string) *string {
  return &v
}

func MakeBool(v bool) *bool {
  return &v
}
