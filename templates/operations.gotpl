package main

import (
    "encoding/json"
)

{{with $doc := .}}
{{range .Fragments}}
type {{formatFragmentName .Name}} struct {
{{formatSelectionSet .SelectionSet 0}}{{"}"}}
{{end}}

{{range .Operations}}
type {{.Name}}Result struct {
{{formatSelectionSet .SelectionSet 0}}{{"}"}}

func (client *AdminClient) {{.Name}}(
  {{range .VariableDefinitions}}
    {{.Variable}} {{goType .Type}},
  {{end}}
) (*{{.Name}}Result, error) {
    query := {{"`"}}
      {{rawQuery . $doc.Fragments}}
    {{"`"}}

    response, err := client.Request(
        query,
        map[string]interface{}{
          {{range .VariableDefinitions}}
            "{{.Variable}}": {{.Variable}},
          {{end}}
        },
    )
    if err != nil {
      return nil, err
    }

    var result {{.Name}}Result

    if err = json.Unmarshal(response.Data, &result); err != nil {
      return nil, err
    }

    return &result, nil
}
{{end}}
{{end}}
